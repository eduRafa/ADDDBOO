/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aadd_dboo.frames.editoriales;

import bean.Author;
import bean.Editorial;
import controller.AuthorController;
import controller.EditorialController;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Juan Antonio
 */
public class EditorialesFrame extends javax.swing.JFrame {

    EditorialController editorialController;
    DefaultListModel modelAutor;
    DefaultListModel modelTodosAutores;
    AuthorController authorController;

    public EditorialesFrame() {
        initComponents();
        nombreErrorJLabel.setVisible(false);
        idJLabel.setVisible(false);
        botonGuardar.setEnabled(false);
        editorialController = new EditorialController();
        authorController = new AuthorController();
        modelAutor = new DefaultListModel();
        modelTodosAutores = new DefaultListModel();
        todosAutoresJList.setModel(modelTodosAutores);
        autoresJList.setModel(modelAutor);
        cargarTabla();
        editorialTable.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent mouseEvent) {
                JTable table = (JTable) mouseEvent.getSource();
                Point point = mouseEvent.getPoint();
                int row = table.rowAtPoint(point);
                if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {
                    Long id = (Long) editorialTable.getValueAt(editorialTable.getSelectedRow(), 0);
                    cargarEditorial(id);
                }
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idJLabel = new javax.swing.JLabel();
        jToolBar2 = new javax.swing.JToolBar();
        botonNuevo = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        botonEditar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        botonGuardar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        editorialTable = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;
            }};
            jPanel1 = new javax.swing.JPanel();
            jLabel1 = new javax.swing.JLabel();
            jLabel2 = new javax.swing.JLabel();
            nombreJTextField = new javax.swing.JTextField();
            jScrollPane2 = new javax.swing.JScrollPane();
            autoresJList = new javax.swing.JList<>();
            jScrollPane3 = new javax.swing.JScrollPane();
            todosAutoresJList = new javax.swing.JList<>();
            jButton1 = new javax.swing.JButton();
            jButton2 = new javax.swing.JButton();
            nombreErrorJLabel = new javax.swing.JLabel();

            idJLabel.setText("-1");

            jToolBar2.setRollover(true);

            botonNuevo.setText("Nuevo");
            botonNuevo.setFocusable(false);
            botonNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            botonNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            botonNuevo.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    botonNuevoActionPerformed(evt);
                }
            });
            jToolBar2.add(botonNuevo);
            jToolBar2.add(jSeparator1);

            botonEditar.setText("Editar");
            botonEditar.setFocusable(false);
            botonEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            botonEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            botonEditar.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    botonEditarActionPerformed(evt);
                }
            });
            jToolBar2.add(botonEditar);

            botonEliminar.setText("Eliminar");
            botonEliminar.setFocusable(false);
            botonEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            botonEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            botonEliminar.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    botonEliminarActionPerformed(evt);
                }
            });
            jToolBar2.add(botonEliminar);
            jToolBar2.add(jSeparator2);

            botonGuardar.setText("Guardar");
            botonGuardar.setFocusable(false);
            botonGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            botonGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            botonGuardar.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    botonGuardarActionPerformed(evt);
                }
            });
            jToolBar2.add(botonGuardar);

            editorialTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null}
                },
                new String [] {
                    "Title 1", "Title 2", "Title 3", "Title 4"
                }
            ));
            jScrollPane1.setViewportView(editorialTable);

            jLabel1.setText("Nombre");

            jLabel2.setText("Autores");

            jScrollPane2.setViewportView(autoresJList);

            jScrollPane3.setViewportView(todosAutoresJList);

            jButton1.setText("+");
            jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jButton1MouseClicked(evt);
                }
            });
            jButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
                }
            });

            jButton2.setText("-");
            jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jButton2MouseClicked(evt);
                }
            });

            nombreErrorJLabel.setForeground(new java.awt.Color(255, 0, 0));
            nombreErrorJLabel.setText("El nombre es obligatorio");

            javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(nombreJTextField))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton1)
                                .addComponent(jButton2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(nombreErrorJLabel)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap())
            );
            jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap(57, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(nombreJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(nombreErrorJLabel))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(56, 56, 56)
                                    .addComponent(jLabel2))
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(35, 35, 35))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(29, 29, 29)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(57, 57, 57))))
            );

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                        .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(70, 70, 70)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(idJLabel)
                            .addGap(76, 76, 76))))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(idJLabel)
                            .addGap(18, 18, 18)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(109, Short.MAX_VALUE))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void botonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevoActionPerformed
        limpiar();
        idJLabel.setText("-1");
        botonGuardar.setEnabled(true);
        cargarTodosAutores();

    }//GEN-LAST:event_botonNuevoActionPerformed

    private void botonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEditarActionPerformed
        if (editorialTable.getSelectedRow() != -1) {
            Long id = (Long) editorialTable.getValueAt(editorialTable.getSelectedRow(), 0);
            cargarEditorial(id);
        }
    }//GEN-LAST:event_botonEditarActionPerformed

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed

        if (editorialTable.getSelectedRow() != -1) {
            long id = (long) editorialTable.getValueAt(editorialTable.getSelectedRow(), 0);
            editorialController.deleteEditorial(id);
            cargarTabla();
            limpiar();
        }
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed
        Editorial e = new Editorial();
        if (!idJLabel.getText().equals("-1")) {
            e = editorialController.getEditorial(Long.parseLong(idJLabel.getText()));
        }
        if (nombreJTextField.getText().length() > 0) {
            nombreErrorJLabel.setVisible(false);
            e.setName(nombreJTextField.getText());
            if (modelAutor.getSize() > 0) {
                List<Author> autores = new ArrayList<>();
                for (int i = 0; i < modelAutor.size(); i++) {
                    autores.add((Author) modelAutor.getElementAt(i));
                }
                e.setAuthors(autores);
            } else {
                e.setAuthors(null);
            }
            if (idJLabel.getText().equals("-1")) {
                editorialController.insertEditorial(e);
            } else {
                editorialController.editEditorial(e);
            }
            limpiar();
            idJLabel.setText("-1");
            botonGuardar.setEnabled(false);
            cargarTabla();
        } else {
            nombreErrorJLabel.setVisible(true);
        }
    }//GEN-LAST:event_botonGuardarActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        if (todosAutoresJList.getSelectedIndex() != -1) {
            modelAutor.addElement(modelTodosAutores.getElementAt(todosAutoresJList.getSelectedIndex()));
            modelTodosAutores.removeElementAt(todosAutoresJList.getSelectedIndex());
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        if (autoresJList.getSelectedIndex() != -1) {
            modelTodosAutores.addElement(modelAutor.getElementAt(autoresJList.getSelectedIndex()));
            modelAutor.removeElementAt(autoresJList.getSelectedIndex());
        }
    }//GEN-LAST:event_jButton2MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> autoresJList;
    private javax.swing.JButton botonEditar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonGuardar;
    private javax.swing.JButton botonNuevo;
    private javax.swing.JTable editorialTable;
    private javax.swing.JLabel idJLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JLabel nombreErrorJLabel;
    private javax.swing.JTextField nombreJTextField;
    private javax.swing.JList<String> todosAutoresJList;
    // End of variables declaration//GEN-END:variables

    private void cargarTabla() {
        List<Editorial> editoriales = editorialController.getAllEditorials();
        DefaultTableModel model = new DefaultTableModel(new Object[][]{
            {null, null},},
                new String[]{
                    "ID", "Nombre"
                });
        editorialTable.setModel(model);
        if (editoriales != null) {
            for (int i = 1; i < editoriales.size(); i++) {
                model.addRow(new Object[][]{{null, null}});
            }
            for (int i = 0; i < editoriales.size(); i++) {
                editorialTable.setValueAt(editoriales.get(i).getId(), i, 0);
                editorialTable.setValueAt(editoriales.get(i).getName(), i, 1);
            }
        }
    }

    private void limpiar() {
        this.nombreJTextField.setText(null);
        this.modelAutor.removeAllElements();
        this.modelTodosAutores.removeAllElements();
    }

    private void cargarTodosAutores() {
        List<Author> autores = null;
        modelTodosAutores.removeAllElements();
        autores = authorController.getAllAuthors();
        if (autores != null) {
            for (int i = 0; i < autores.size(); i++) {
                if (!comprobarID((int) (long) autores.get(i).getId())) {
                    modelTodosAutores.addElement(autores.get(i));
                }

            }
        }
    }

    private boolean comprobarID(int id) {
        boolean found = false;

        for (int i = 0; i < modelAutor.getSize() && !found; i++) {
            Author a = (Author) modelAutor.getElementAt(i);
            if (id == (int) (long) a.getId()) {
                found = true;
            }
        }
        return found;
    }

    private void cargarEditorial(Long id) {
        Editorial e = editorialController.getEditorial(id);
        idJLabel.setText(String.valueOf(e.getId()));
        nombreJTextField.setText(e.getName());
        modelAutor.removeAllElements();
        if (e.getAuthors() != null) {
            for (int i = 0; i < e.getAuthors().size(); i++) {
                modelAutor.addElement(e.getAuthors().get(i));
            }
        }
        cargarTodosAutores();
        botonGuardar.setEnabled(true);

    }
}
